
#if 0
static void
delay(int n){
    int i;
    for(i=n*100000; i > 0; i--){
        asm("nop");	/* This stops it optimising code out */
    }
}

static void
stm32_serial_init(void){

    // RCC->APB2ENR |= 0x4005;
    /* all periphs enabled */
    RCC->APB2ENR |= 0x38FFFD;
    RCC->APB1ENR |= 0x3afec1ff;
    RCC->AHBENR  |= 0x557;

    /* gpio A - output, serial afi */
    GPIOA->CRL = 0x11114b11;
    GPIOA->CRH = 0x111114b1;
    GPIOB->CRL = 0x11111111;


    USART1->BRR   = SYSCLOCK / 57600;
    USART1->CR1  |= 0x200C;	// enable, no parity, 8 bit, ...

//    stm32_putchar('\n');
}

void
stm32_putchar(int c){
    while( !(USART1->SR & 0x80) ) {}
    USART1->DR = c;
    if( c == '\n' ) stm32_putchar('\r');
}

void
talky(void){
    int n = 0;

    while(1){
        delay(1);
        n++;
        stm32_putchar( (n&0xF) + 0x40 );
        GPIOB->ODR = (n>>2) & 2;
    }
}

static void
blink_init(void){
/* Enable everything but wdg */
    RCC->APB2ENR |= 0x38FFFD;
    RCC->APB1ENR |= 0x3afec1ff;
    RCC->AHBENR  |= 0x557;

    /* blink B1 */
    GPIOB->CRL = 0x10;
}

void
blink(int n){

    for( ;n; n--){
        GPIOB->ODR = (GPIOB->ODR & 0xFFFFFFFD) | 2;
        delay(5);
        GPIOB->ODR = (GPIOB->ODR & 0xFFFFFFFD) | 0;
        delay(5);
    }
    delay(40);
}



void
xxxblinky(void){

    int n = 0;
    int i;

    stm32_putchar('!');
    
/* Enable everything but wdg */
    RCC->APB2ENR |= 0x38FFFD;
    RCC->APB1ENR |= 0x3afec1ff;
    RCC->AHBENR  |= 0x557;

/* gpio A,B,C - output, except serial1 */
    GPIOA->CRL = 0x11111111;
    GPIOA->CRH = 0x111114b1;
    GPIOB->CRL = 0x11111111;
    GPIOB->CRH = 0x11111111;
    GPIOC->CRL = 0x11111111;
    GPIOC->CRL = 0x11111111;

    while(1){
        delay(1);
        n++;
        /* blink on all gpio A,B,C */
        i = (n & 0xf) * 0x1111;

        GPIOA->ODR = (GPIOA->ODR & 0xFFFF0000) | i;
        GPIOB->ODR = (GPIOB->ODR & 0xFFFF0000) | i;
        GPIOC->ODR = (GPIOC->ODR & 0xFFFF0000) | i;

        stm32_putchar( (n&0xF) + 0x40 );
    }
}
#endif
